LIBworkman_0.0.1 {
  global:
        workman_init;
        workman_init_check;

        workman_object_get_attribute;
        workman_object_get_attributes;
        workman_object_get_type;
        workman_object_refresh_attributes;
        workman_object_save_attributes;
        workman_object_get_state;
        workman_object_attribute_list_get_type;
        workman_object_get_name;

        workman_attribute_get_name;
        workman_attribute_get_type;
        workman_attribute_get_value;
        workman_attribute_get_writable;
        workman_attribute_new;
        workman_attribute_set_value;

        workman_process_get_id;
        workman_process_get_name;
        workman_process_get_type;
        workman_process_new;

        workman_manager_add_partition;
        workman_manager_get_type;
        workman_manager_get_consumers;
        workman_manager_get_partitions;
        workman_manager_new;
        workman_manager_remove_partition;
        workman_manager_refresh_objects;
        workman_manager_get_default;

        workman_partition_get_consumers;
        workman_partition_get_children;
        workman_partition_get_parent;
        workman_partition_set_parent;
        workman_partition_get_type;

        workman_consumer_get_partition;
        workman_consumer_get_processes;
        workman_consumer_get_type;
        workman_consumer_set_partition;

        workman_state_get_type;

        workman_attribute_list_get_type;
        workman_partition_list_get_type;
        workman_consumer_list_get_type;
        workman_process_list_get_type;
        workman_plugin_list_get_type;
        workman_object_list_get_type;

  local:
        *;
};

#LIBworkman_0.0.2 {
#  global:
#	workman_foo;
#	workman_bar;
#} LIBworkman_0.0.1;

# .... define new API here using predicted next version number ....
