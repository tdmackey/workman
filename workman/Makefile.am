
EXTRA_DIST = libworkman.sym

lib_LTLIBRARIES = libworkman-1.0.la

libworkman_1_0_ladir = $(includedir)/workman-1.0/workman
GENERATED_FILES = \
			workman-enums.h \
			workman-enums.c \
			$(NULL)
libworkman_1_0_la_HEADERS = \
			workman.h \
			workman-main.h \
			workman-attribute.h \
			workman-process.h \
			workman-object.h \
			workman-partition.h \
			workman-consumer.h \
			workman-manager.h \
			workman-state.h \
			workman-lists.h \
                        $(NULL)
HEADERS_PRIVATE = \
			workman-object-private.h \
			workman-partition-private.h \
			workman-consumer-private.h \
			workman-manager-linux.h \
                        $(NULL)
CFILES = \
			workman-main.c \
			workman-attribute.c \
			workman-process.c \
			workman-object.c \
			workman-partition.c \
			workman-consumer.c \
			workman-manager.c \
			workman-manager-linux.c \
			workman-lists.c \
                        $(NULL)
libworkman_1_0_la_SOURCES = \
			$(libworkman_1_0_la_HEADERS) \
			$(HEADERS_PRIVATE) \
			$(GENERATED_FILES) \
			$(CFILES) \
                        $(NULL)
libworkman_1_0_la_CFLAGS = \
			-DWORKMAN_BUILD \
			-DG_LOG_DOMAIN="\"workman\"" \
			-I$(top_srcdir) \
			$(GLIB2_CFLAGS) \
			$(GTHREAD2_CFLAGS) \
			$(WARN_CFLAGS)
libworkman_1_0_la_LIBADD = \
			$(GLIB2_LIBS) \
			$(GTHREAD2_LIBS)
libworkman_1_0_la_DEPENDENCIES = \
			libworkman.sym
libworkman_1_0_la_LDFLAGS = \
			-Wl,--version-script=$(srcdir)/libworkman.sym \
			-version-info $(WORKMAN_VERSION_INFO)


workman-enums.h: $(libworkman_1_0_la_HEADERS) Makefile
	@$(GLIB_MKENUMS) \
		--fhead "/* Automatically generated by glib-mkenums */\n\n#ifndef __WORKMAN_ENUMS_H__\n#define __WORKMAN_ENUMS_H__\n\n#include <glib-object.h>\n\nG_BEGIN_DECLS\n" \
		--fprod "\n/* enumerations from \"@filename@\" */\n" \
		--vhead "GType @enum_name@_get_type (void) G_GNUC_CONST;\n#define WORKMAN_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n\n" \
		--ftail "G_END_DECLS\n\n#endif /* __WORKMAN_ENUMS_H__ */" \
		$(libworkman_1_0_la_HEADERS) > workman-enums.h

workman-enums.c: $(libworkman_1_0_la_HEADERS) Makefile workman-enums.h
	@$(GLIB_MKENUMS) \
		--fhead "/* Automatically generated by glib-mkenums */\n\n#include \"workman.h\"" \
		--fprod "\n/* enumerations from \"@filename@\" */\n" \
		--vhead "GType\n@enum_name@_get_type (void)\n{\n    static GType etype = 0;\n    if (etype == 0) {\n        static const G@Type@Value values[] = {" \
		--vprod "            { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
		--vtail "            { 0, NULL, NULL }\n        };\n        etype = g_@type@_register_static (\"@EnumName@\", values);\n    }\n    return etype;\n}\n" \
		$(libworkman_1_0_la_HEADERS) > workman-enums.c

CLEANFILES = $(GENERATED_FILES)

if WITH_GOBJECT_INTROSPECTION

Workman-1.0.gir: libworkman-1.0.la $(G_IR_SCANNER) Makefile.am
	$(AM_V_GEN)$(G_IR_SCANNER) \
                --quiet \
                --warn-all \
                --namespace Workman \
                --nsversion 1.0 \
                --include GObject-2.0 \
                --identifier-prefix=Workman \
                --symbol-prefix=workman \
                --library=$(builddir)/libworkman-1.0.la \
                --output $@ \
                -I$(top_srcdir) \
                --verbose \
                --pkg=gthread-2.0 \
                --c-include="workman/workman.h" \
                --pkg-export=workman-1.0 \
		$(libworkman_1_0_la_HEADERS:%=$(srcdir)/%) \
		$(GENERATED_FILES:%=$(srcdir)/%) \
		$(CFILES:%=$(srcdir)/%)

girdir = $(datadir)/gir-1.0
gir_DATA = Workman-1.0.gir

typelibsdir = $(libdir)/girepository-1.0
typelibs_DATA = Workman-1.0.typelib

%.typelib: %.gir
	$(AM_V_GEN)$(G_IR_COMPILER) \
                --includedir=$(builddir) \
                --includedir=$(girdir) \
                -o $@ $<

CLEANFILES += $(gir_DATA) $(typelibs_DATA)

endif # WITH_GOBJECT_INTROSPECTION
